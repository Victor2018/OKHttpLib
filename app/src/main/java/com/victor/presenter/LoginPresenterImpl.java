package com.victor.presenter;import com.victor.data.LoginReq;import com.victor.okhttp.library.annotation.HttpParms;import com.victor.okhttp.library.data.Request;import com.victor.okhttp.library.inject.HttpInject;import com.victor.okhttp.library.module.HttpRequest;import com.victor.okhttp.library.presenter.impl.BasePresenterImpl;import com.victor.view.LoginView;/* * ----------------------------------------------------------------- * Copyright (C) 2018-2028, by Victor, All rights reserved. * ----------------------------------------------------------------- * File: LoginPresenterImpl.java * Author: Victor * Date: 2018/9/6 18:25 * Description: * ----------------------------------------------------------------- */public class LoginPresenterImpl<H,T> extends BasePresenterImpl<H,T> {	/*Presenter作为中间层，持有View和Model的引用*/	private LoginView loginView;	public LoginPresenterImpl(LoginView loginView) {		this.loginView = loginView;	}	@Override	public void onSuccess(T data) {		if (loginView == null) return;		if (data == null) {			loginView.OnLoginInfo(null,"no data response");		} else {			loginView.OnLoginInfo(data,"");		}	}	@Override	public void onError(String error) {		if (loginView == null) return;		loginView.OnLoginInfo(null,error);	}	@Override	public void detachView() {		loginView = null;	}	@HttpParms(method = Request.POST,bodyContentType = HttpRequest.mDefaultBodyContentType,			responseCls = LoginReq.class)	@Override	public void sendRequest(String url, H header, T parm) {		HttpInject.inject(this);		super.sendRequest(url,header,parm);	}}