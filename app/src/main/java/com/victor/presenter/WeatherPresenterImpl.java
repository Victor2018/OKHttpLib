package com.victor.presenter;import com.victor.data.Weather;import com.victor.okhttp.library.annotation.HttpParms;import com.victor.okhttp.library.data.Request;import com.victor.okhttp.library.inject.HttpInject;import com.victor.okhttp.library.module.HttpRequest;import com.victor.okhttp.library.presenter.impl.BasePresenterImpl;import com.victor.view.WeatherView;import java.io.IOException;/* * ----------------------------------------------------------------- * Copyright (C) 2018-2028, by Victor, All rights reserved. * ----------------------------------------------------------------- * File: WeatherPresenterImpl.java * Author: Victor * Date: 2018/9/6 18:25 * Description: * ----------------------------------------------------------------- */public class WeatherPresenterImpl <H,T> extends BasePresenterImpl<H,T> {	/*Presenter作为中间层，持有View和Model的引用*/	private WeatherView weatherView;	public WeatherPresenterImpl(WeatherView weatherView) {		this.weatherView = weatherView;	}	@Override	public void onSuccess(T data) {		if (weatherView == null) return;		if (data == null) {			weatherView.OnWeatherInfo(null,"no data response");		} else {			weatherView.OnWeatherInfo(data,"");		}	}	@Override	public void onError(IOException error) {		if (weatherView == null) return;		weatherView.OnWeatherInfo(null,error.getMessage());	}	@Override	public Class getViewCls() {		return WeatherView.class;	}	@Override	public Class getViewImplCls() {		return weatherView.getClass();	}	@Override	public void detachView() {		weatherView = null;	}	@HttpParms(method = Request.GET,bodyContentType = HttpRequest.mJsonBodyContentType)	@Override	public void sendRequest(String url, H header, T parm) {		HttpInject.inject(this);		super.sendRequest(url,header,parm);	}}